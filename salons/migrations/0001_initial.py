# Generated by Django 5.2.6 on 2025-10-05 10:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appointments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Salão')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='salon_photos/', verbose_name='Foto do Salão')),
                ('address', models.CharField(max_length=200, verbose_name='Endereço')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=2, verbose_name='Estado')),
                ('zip_code', models.CharField(max_length=10, verbose_name='CEP')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('weekdays_open', models.TimeField(blank=True, null=True, verbose_name='Segunda à Sexta - Abertura')),
                ('weekdays_close', models.TimeField(blank=True, null=True, verbose_name='Segunda à Sexta - Fechamento')),
                ('saturday_open', models.TimeField(blank=True, null=True, verbose_name='Sábado - Abertura')),
                ('saturday_close', models.TimeField(blank=True, null=True, verbose_name='Sábado - Fechamento')),
                ('sunday_open', models.TimeField(blank=True, null=True, verbose_name='Domingo - Abertura')),
                ('sunday_close', models.TimeField(blank=True, null=True, verbose_name='Domingo - Fechamento')),
                ('is_temporarily_closed', models.BooleanField(default=False, verbose_name='Temporariamente Fechado')),
                ('closed_until', models.DateTimeField(blank=True, null=True, verbose_name='Fechado até')),
                ('closure_note', models.CharField(blank=True, max_length=200, null=True, verbose_name='Motivo do Fechamento')),
                ('cancellation_policy_enabled', models.BooleanField(default=False, verbose_name='Política de Cancelamento Habilitada')),
                ('cancellation_fee_percentage', models.DecimalField(decimal_places=2, default=50.0, help_text='Porcentagem do valor do serviço cobrada como multa', max_digits=5, verbose_name='Multa de Cancelamento (%)')),
                ('cancellation_hours_threshold', models.PositiveIntegerField(default=12, help_text='Cancelamentos com menos tempo que isso serão multados', verbose_name='Prazo para Cancelamento sem Multa (horas)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='salon', to=settings.AUTH_USER_MODEL, verbose_name='Proprietário')),
            ],
            options={
                'verbose_name': 'Salão',
                'verbose_name_plural': 'Salões',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Serviço')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('duration', models.PositiveIntegerField(verbose_name='Duração (minutos)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='salons.salon', verbose_name='Salão')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('monthly', 'Mensal'), ('weekly', 'Semanal'), ('daily', 'Diário'), ('percentage', 'Porcentagem por Serviço')], default='monthly', max_length=10, verbose_name='Tipo de Pagamento')),
                ('salary_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Valor mensal, semanal ou diário conforme tipo escolhido', max_digits=10, verbose_name='Valor do Salário')),
                ('commission_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text="Porcentagem sobre cada serviço realizado (apenas se tipo for 'Porcentagem por Serviço')", max_digits=5, verbose_name='Porcentagem de Comissão (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('hire_date', models.DateField(auto_now_add=True, verbose_name='Data de contratação')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='salons.salon', verbose_name='Salão')),
                ('services', models.ManyToManyField(blank=True, to='salons.service', verbose_name='Serviços que pode executar')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'unique_together': {('user', 'salon')},
            },
        ),
        migrations.CreateModel(
            name='FinancialRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('income', 'Receita'), ('expense', 'Despesa')], max_length=7, verbose_name='Tipo de Transação')),
                ('category', models.CharField(max_length=20, verbose_name='Categoria')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('description', models.CharField(max_length=200, verbose_name='Descrição')),
                ('reference_month', models.PositiveIntegerField(verbose_name='Mês de Referência (1-12)')),
                ('reference_year', models.PositiveIntegerField(verbose_name='Ano de Referência')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('related_appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appointments.appointment', verbose_name='Agendamento Relacionado')),
                ('related_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='salons.employee', verbose_name='Funcionário Relacionado')),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_records', to='salons.salon', verbose_name='Salão')),
            ],
            options={
                'verbose_name': 'Registro Financeiro',
                'verbose_name_plural': 'Registros Financeiros',
                'ordering': ['-reference_year', '-reference_month', '-created_at'],
                'indexes': [models.Index(fields=['salon', 'reference_year', 'reference_month'], name='salons_fina_salon_i_1c2f9e_idx'), models.Index(fields=['transaction_type', 'category'], name='salons_fina_transac_fe660c_idx')],
            },
        ),
    ]
